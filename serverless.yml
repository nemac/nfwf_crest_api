service: crest-api

plugins:
  - serverless-ignore
  - serverless-python-requirements
  - serverless-offline

custom:
  pythonRequirements:
    dockerizePip: true
    zip: true

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: ${opt:stage, 'dev'}
  memorySize: 1024
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource: "arn:aws:s3:::nfwf-tool/*"
    - Effect: 'Allow'
      Action:
        - 's3:*'
      Resource: "arn:aws:s3:::nfwf-tool-user-shapes/*"

  environment:
    STAGE: ${self:provider.stage}

functions:
  identify:
    handler: identify.lambda_handler
    events: 
      - http: 
          path: identify
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                region: true
                lng: true
                lat: true

  zonal_stats:
    handler: zonal_stats.handler
    events: 
      - http: 
          path: zonal_stats
          method: post
          cors: true
          request:
            parameters:
              querystrings:
                region: true

  upload_shape:
    handler: upload_shape.handler
    events: 
      - http: 
          path: upload_shape
          method: post
          cors: true

  read_geojson:
    handler: read_geojson.lambda_handler
    events:
      - http:
          path: read_geojson
          method: get
          cors: true
          request:
            parameters:
              querystrings:
                region: true
                name: true

#  read_s3:
#    handler: read_s3.lambda_handler
#    events:
#      - http:
#          path: read_s3
#          method: get
#          cors: true
#          request:
#            parameters:
#              querystrings:
#                shareUrl: true

#  write_s3:
#    handler: write_s3.lambda_handler
#    events:
#      - http:
#          path: write_s3
#          method: post
#          cors: true
#          # request:
#           # parameters:
#            #  querystrings:
#            #    region: true
#            #    name: true
